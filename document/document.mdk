Title         : 迪杰斯特拉派初赛文档
Author        : hy19890811
Author        : 欧阳嘉艺
Author        : HanGH
Logo          : False
Package       : [UTF8]ctex

[TITLE]
阿萨德撒所多11
# 算法分析
## 赛题分析 
通过对赛题的分析，这是一个Multi-Constrained Multiple shortest Paths问题
即是一个有最大通过节点数目限制的在多约束条件下求多条最短路径问题。约束条件包括以下几点：

- 最多只能经过9个节点(包括起止节点)，且重复经过的节点算多次；
- 必须经过图中注明的必经点和必经路径；
- 不能经过图中注明的红色路段，即比不经过的路径；
- 满足以上条件求出最短路径；

通过对约束条件的分析，可得出如下结论：

- 在路径的选择上需要设定并记录两个权值，即路径经过节点数和路径的距离(即路径的花费)；
- 最优路径是指路径上的节点数不超过9，且路径的距离(即花费)最小；
- 当最优路径不存在时需要给出多条参考路径；
- 经过必经点和必经路径，避开红色路段；

## 算法设计思路
通过1.1.的分析，参考路径需要综合考虑路径经过的节点数和路径的距离(花费)，相对较少的花费和相对较少的经过节点数都要在参考路径中体现出来。
又由于赛题中要求有必经点和必经路径，为了保证算法的通用性，本文将赛题的本质归结为求多源最短路径问题。

本文采用Floyd算法和贪心算法的组合，具体解决思路如下所示：

1. 排除红色路段代表不能经过的路径，通过Floyd算法求出任意两个节点之间花费最少的路径和经过节点数最少的路径以及同时包含相对较少的花费和较少的节点数的路径(下文中将这些路径统称为参考路径)并将这些路径进行保存；

2. 在求最优路径以及参考路径时主要采用贪心算法的思想，

## 算法通用性与灵活性分析
本算法具备很强的通用性和灵活性，具体体现在以下几个方面：

1. 搜索最优路径或参考路径方面：当满足所有约束条件的最优路径存在时，本算法可以求出此最优路径；当不存在最优路径时，
本算法会搜索出多条参考路径，分别是花费最少的路径、经过节点数最少的路径以及花费和经过节点数均较少的若干条路径，具体实例
会在2.节中结合测试用例具体说明；

2. 适应性方面：即使图的结构发生改变，例如改变图中的起点、终点、必经节点和必经路径，本算法仍然可以求出最优路径或者若干条参考路径，具有很强的灵活性；

3. 选取算法方面：本赛题是一个有最大通过节点数目限制的在多约束条件下求多条最短路径问题，其本质是一个求多源最短路径问题，
Floyd算法在求解多源最短路径具有较强的通用性，而本算法是基于Floyd算法进行修改，故也具有较强的通用性；

4. 增减权值方面：目前，本赛题中对于路径的限制有两个权值，如果题目中增添了权值，只需要在代码中增加相应限制权值的代码，仍然能够求出最优路径或参考路径，
灵活性较强；

由于本赛题对于路径有花费和经过节点数两方面的限制，所以当最优路径不存在时，仅搜索出一条花费最少的路径和一条经过节点数最少的路径显然不满足题目要求。
本文设计的算法针对这两种限制具有很强的解决能力和通用性，能够搜索出所有参考路径作为参考。


## 算法时间复杂度分析

1. 在1.2.小节的步骤1中主要基于Floyd算法进行改进，故该算法的时间复杂为&Omicron;(an^3^)，其中n是指图中的节点总数；
a是指任意两个节点之间参考路径数总和，通过这些条件的限制，这些路径数量总和在一个较小的常数范围内，故a始终是一个常数；

2. 在1.2.小节的步骤2中，通过剪枝优化处理将时间复杂度降低为&Omicron;(b^m^)，其中m是指题目中设定的必经节点以及必经路径的数量总和；
b代表一个较小的常数，具体是指起点到第一个必经节点(必经路径)之间的参考路径数量，或者必经节点(必经路径)到下一个必经节点(必经路径)的参考路径数量，
或者必经节点(必经路径)到终点的参考路径数量。故b的值可能会发生改变，但始终会在一个较小的常数范围内。
由于在多限制条件下，节点之间满足条件的路径数目较少，经过测试，本题中b的范围在3~4之间。

综上所述，本算法的时间复杂度为&Omicron;(an^3^)+&Omicron;(b^m^)，当图中节点总数与必经节点和必经路径数量总和相差较大时，
或者图中必经节点和必经路径数量较少时本算法时间复杂度可归结为&Omicron;(an^3^)，仍具有较好的性能。

## 算法实现分析

Madoko is a fast markdown processor for writing professional articles
with a focus on simplicity and plain text readability.

* Read the [reference manual].
* Explore the upper-right toolbox menu to discover how Markdown works. 
* `Alt-Q` reformats the current paragraph.

# 测试用例及结果分析
1. 图中已经给出的用例

2. 某个节点的多条边均为必经路径；

3. 某个节点的相邻节点均为必经点；

4. 多个相邻节点和相邻路径均为必经路径；

5. 必经点或必经路径到终点的花费大于起点(即更改起点或终点)；

6. 拓扑图中没有起点和终点时，会给出相应提示；

7. 当没有任何一条路径能够从起点到达终点时，会给出相应提示；

Enjoy!

[reference manual]: http://research.microsoft.com/en-us/um/people/daan/madoko/doc/reference.html  "Madoko reference manual"
